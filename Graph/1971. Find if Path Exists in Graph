class Solution {
public:
    bool validPath(int n, vector<vector<int>>& edges, int source, int destination) {
        
        unordered_map<int,vector<int>>mp;

        for(auto x: edges){
            
            vector<int>temp=x;

            int u=temp[0];
            int v=temp[1];

            mp[u].push_back(v);
            mp[v].push_back(u);
        }

        queue<int>q;
        q.push(source);

        vector<int>visited(n+1,false);
        visited[source]=true;

        while(!q.empty()){
            int temp=q.front();
            q.pop();

            vector<int>arr=mp[temp];
            
            for(auto x:arr){
                if(visited[x]==false){
                    q.push(x);
                    visited[x]=true;
                }
            }
            if(visited[destination]==true){
                return true;
            }
        }
        return false;
    }
};
